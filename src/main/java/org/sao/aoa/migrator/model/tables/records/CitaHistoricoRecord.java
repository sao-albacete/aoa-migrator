/**
 * This class is generated by jOOQ
 */
package org.sao.aoa.migrator.model.tables.records;

import org.sao.aoa.migrator.model.tables.CitaHistorico;

/**
 * This class is generated by jOOQ.
 *
 * Históricos de cita recopiladas
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CitaHistoricoRecord extends org.jooq.impl.UpdatableRecordImpl<CitaHistoricoRecord> {

	private static final long serialVersionUID = -1138458726;

	/**
	 * Setter for <code>cita_historico.id</code>. Identificador de la cita
	 */
	public void setId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cita_historico.id</code>. Identificador de la cita
	 */
	public java.lang.Integer getId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>cita_historico.fechaHistorico</code>. Fecha de alta del registro histórico
	 */
	public void setFechahistorico(java.sql.Timestamp value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cita_historico.fechaHistorico</code>. Fecha de alta del registro histórico
	 */
	public java.sql.Timestamp getFechahistorico() {
		return (java.sql.Timestamp) getValue(1);
	}

	/**
	 * Setter for <code>cita_historico.usuarioHistorico</code>. Usuario que realizó el cambio
	 */
	public void setUsuariohistorico(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cita_historico.usuarioHistorico</code>. Usuario que realizó el cambio
	 */
	public java.lang.String getUsuariohistorico() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>cita_historico.cita_id</code>. Id de cita
	 */
	public void setCitaId(java.lang.Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cita_historico.cita_id</code>. Id de cita
	 */
	public java.lang.Integer getCitaId() {
		return (java.lang.Integer) getValue(3);
	}

	/**
	 * Setter for <code>cita_historico.fechaAlta</code>. Fecha de alta de la cita
	 */
	public void setFechaalta(java.sql.Timestamp value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>cita_historico.fechaAlta</code>. Fecha de alta de la cita
	 */
	public java.sql.Timestamp getFechaalta() {
		return (java.sql.Timestamp) getValue(4);
	}

	/**
	 * Setter for <code>cita_historico.cantidad</code>. Número de individuos de la especie citada
	 */
	public void setCantidad(java.lang.Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>cita_historico.cantidad</code>. Número de individuos de la especie citada
	 */
	public java.lang.Integer getCantidad() {
		return (java.lang.Integer) getValue(5);
	}

	/**
	 * Setter for <code>cita_historico.observaciones</code>. Observaciones sobre la cita
	 */
	public void setObservaciones(java.lang.String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>cita_historico.observaciones</code>. Observaciones sobre la cita
	 */
	public java.lang.String getObservaciones() {
		return (java.lang.String) getValue(6);
	}

	/**
	 * Setter for <code>cita_historico.indSeleccionada</code>. Indica si la cita es seleccionada para el anuario (1) o no (0)
	 */
	public void setIndseleccionada(java.lang.Byte value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>cita_historico.indSeleccionada</code>. Indica si la cita es seleccionada para el anuario (1) o no (0)
	 */
	public java.lang.Byte getIndseleccionada() {
		return (java.lang.Byte) getValue(7);
	}

	/**
	 * Setter for <code>cita_historico.lugar_id</code>. Identificador del lugar donde se produjo la cita
	 */
	public void setLugarId(java.lang.Integer value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>cita_historico.lugar_id</code>. Identificador del lugar donde se produjo la cita
	 */
	public java.lang.Integer getLugarId() {
		return (java.lang.Integer) getValue(8);
	}

	/**
	 * Setter for <code>cita_historico.indRarezaHomologada</code>. Indica si la cita es de una rareza homologada (1) o no (0)
	 */
	public void setIndrarezahomologada(java.lang.Integer value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>cita_historico.indRarezaHomologada</code>. Indica si la cita es de una rareza homologada (1) o no (0)
	 */
	public java.lang.Integer getIndrarezahomologada() {
		return (java.lang.Integer) getValue(9);
	}

	/**
	 * Setter for <code>cita_historico.observador_principal_id</code>.
	 */
	public void setObservadorPrincipalId(java.lang.Integer value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>cita_historico.observador_principal_id</code>.
	 */
	public java.lang.Integer getObservadorPrincipalId() {
		return (java.lang.Integer) getValue(10);
	}

	/**
	 * Setter for <code>cita_historico.clase_reproduccion_id</code>.
	 */
	public void setClaseReproduccionId(java.lang.Integer value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>cita_historico.clase_reproduccion_id</code>.
	 */
	public java.lang.Integer getClaseReproduccionId() {
		return (java.lang.Integer) getValue(11);
	}

	/**
	 * Setter for <code>cita_historico.fuente_id</code>.
	 */
	public void setFuenteId(java.lang.Integer value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>cita_historico.fuente_id</code>.
	 */
	public java.lang.Integer getFuenteId() {
		return (java.lang.Integer) getValue(12);
	}

	/**
	 * Setter for <code>cita_historico.indHabitatRaro</code>. Indica si la cita fue en un habitat raro para la especie vista (1) o no (0)
	 */
	public void setIndhabitatraro(java.lang.Byte value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>cita_historico.indHabitatRaro</code>. Indica si la cita fue en un habitat raro para la especie vista (1) o no (0)
	 */
	public java.lang.Byte getIndhabitatraro() {
		return (java.lang.Byte) getValue(13);
	}

	/**
	 * Setter for <code>cita_historico.indCriaHabitatRaro</code>. Indica si la cita es de una especie criando en un habitat raro (1) o no (0)
	 */
	public void setIndcriahabitatraro(java.lang.Byte value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>cita_historico.indCriaHabitatRaro</code>. Indica si la cita es de una especie criando en un habitat raro (1) o no (0)
	 */
	public java.lang.Byte getIndcriahabitatraro() {
		return (java.lang.Byte) getValue(14);
	}

	/**
	 * Setter for <code>cita_historico.indHerido</code>. Indica si el individuo/s citado/s estaba/n herido/s (1) o no (0)
	 */
	public void setIndherido(java.lang.Byte value) {
		setValue(15, value);
	}

	/**
	 * Getter for <code>cita_historico.indHerido</code>. Indica si el individuo/s citado/s estaba/n herido/s (1) o no (0)
	 */
	public java.lang.Byte getIndherido() {
		return (java.lang.Byte) getValue(15);
	}

	/**
	 * Setter for <code>cita_historico.indComportamiento</code>. Descripción del comportamiento de la especie
	 */
	public void setIndcomportamiento(java.lang.Byte value) {
		setValue(16, value);
	}

	/**
	 * Getter for <code>cita_historico.indComportamiento</code>. Descripción del comportamiento de la especie
	 */
	public java.lang.Byte getIndcomportamiento() {
		return (java.lang.Byte) getValue(16);
	}

	/**
	 * Setter for <code>cita_historico.especie_id</code>. Identificador de la especie
	 */
	public void setEspecieId(java.lang.Integer value) {
		setValue(17, value);
	}

	/**
	 * Getter for <code>cita_historico.especie_id</code>. Identificador de la especie
	 */
	public java.lang.Integer getEspecieId() {
		return (java.lang.Integer) getValue(17);
	}

	/**
	 * Setter for <code>cita_historico.criterio_seleccion_cita_id</code>. Criterio utilizado en la selección de la cita
	 */
	public void setCriterioSeleccionCitaId(java.lang.Integer value) {
		setValue(18, value);
	}

	/**
	 * Getter for <code>cita_historico.criterio_seleccion_cita_id</code>. Criterio utilizado en la selección de la cita
	 */
	public java.lang.Integer getCriterioSeleccionCitaId() {
		return (java.lang.Integer) getValue(18);
	}

	/**
	 * Setter for <code>cita_historico.importancia_cita_id</code>.
	 */
	public void setImportanciaCitaId(java.lang.Integer value) {
		setValue(19, value);
	}

	/**
	 * Getter for <code>cita_historico.importancia_cita_id</code>.
	 */
	public java.lang.Integer getImportanciaCitaId() {
		return (java.lang.Integer) getValue(19);
	}

	/**
	 * Setter for <code>cita_historico.estudio_id</code>.
	 */
	public void setEstudioId(java.lang.Integer value) {
		setValue(20, value);
	}

	/**
	 * Getter for <code>cita_historico.estudio_id</code>.
	 */
	public java.lang.Integer getEstudioId() {
		return (java.lang.Integer) getValue(20);
	}

	/**
	 * Setter for <code>cita_historico.indPrivacidad</code>. Indica si los datos sensibles de la cita de la especie deben ser privados (0) o públicos (1)
	 */
	public void setIndprivacidad(java.lang.Byte value) {
		setValue(21, value);
	}

	/**
	 * Getter for <code>cita_historico.indPrivacidad</code>. Indica si los datos sensibles de la cita de la especie deben ser privados (0) o públicos (1)
	 */
	public java.lang.Byte getIndprivacidad() {
		return (java.lang.Byte) getValue(21);
	}

	/**
	 * Setter for <code>cita_historico.indFoto</code>.
	 */
	public void setIndfoto(java.lang.Byte value) {
		setValue(22, value);
	}

	/**
	 * Getter for <code>cita_historico.indFoto</code>.
	 */
	public java.lang.Byte getIndfoto() {
		return (java.lang.Byte) getValue(22);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached CitaHistoricoRecord
	 */
	public CitaHistoricoRecord() {
		super(CitaHistorico.CITA_HISTORICO);
	}

	/**
	 * Create a detached, initialised CitaHistoricoRecord
	 */
	public CitaHistoricoRecord(java.lang.Integer id, java.sql.Timestamp fechahistorico, java.lang.String usuariohistorico, java.lang.Integer citaId, java.sql.Timestamp fechaalta, java.lang.Integer cantidad, java.lang.String observaciones, java.lang.Byte indseleccionada, java.lang.Integer lugarId, java.lang.Integer indrarezahomologada, java.lang.Integer observadorPrincipalId, java.lang.Integer claseReproduccionId, java.lang.Integer fuenteId, java.lang.Byte indhabitatraro, java.lang.Byte indcriahabitatraro, java.lang.Byte indherido, java.lang.Byte indcomportamiento, java.lang.Integer especieId, java.lang.Integer criterioSeleccionCitaId, java.lang.Integer importanciaCitaId, java.lang.Integer estudioId, java.lang.Byte indprivacidad, java.lang.Byte indfoto) {
		super(CitaHistorico.CITA_HISTORICO);

		setValue(0, id);
		setValue(1, fechahistorico);
		setValue(2, usuariohistorico);
		setValue(3, citaId);
		setValue(4, fechaalta);
		setValue(5, cantidad);
		setValue(6, observaciones);
		setValue(7, indseleccionada);
		setValue(8, lugarId);
		setValue(9, indrarezahomologada);
		setValue(10, observadorPrincipalId);
		setValue(11, claseReproduccionId);
		setValue(12, fuenteId);
		setValue(13, indhabitatraro);
		setValue(14, indcriahabitatraro);
		setValue(15, indherido);
		setValue(16, indcomportamiento);
		setValue(17, especieId);
		setValue(18, criterioSeleccionCitaId);
		setValue(19, importanciaCitaId);
		setValue(20, estudioId);
		setValue(21, indprivacidad);
		setValue(22, indfoto);
	}
}
