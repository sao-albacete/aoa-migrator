/**
 * This class is generated by jOOQ
 */
package org.sao.aoa.migrator.model.tables.records;

import org.sao.aoa.migrator.model.tables.AsoCitaObservador;

/**
 * This class is generated by jOOQ.
 *
 * Asocia cita y observadores
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AsoCitaObservadorRecord extends org.jooq.impl.UpdatableRecordImpl<AsoCitaObservadorRecord> implements org.jooq.Record2<java.lang.Integer, java.lang.Integer> {

	private static final long serialVersionUID = 428696197;

	/**
	 * Setter for <code>aso_cita_observador.cita_id</code>. Identificador de la cita
	 */
	public void setCitaId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>aso_cita_observador.cita_id</code>. Identificador de la cita
	 */
	public java.lang.Integer getCitaId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>aso_cita_observador.observador_secundario_id</code>. Identificador del observador
	 */
	public void setObservadorSecundarioId(java.lang.Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>aso_cita_observador.observador_secundario_id</code>. Identificador del observador
	 */
	public java.lang.Integer getObservadorSecundarioId() {
		return (java.lang.Integer) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record2<java.lang.Integer, java.lang.Integer> key() {
		return (org.jooq.Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row2<java.lang.Integer, java.lang.Integer> fieldsRow() {
		return (org.jooq.Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row2<java.lang.Integer, java.lang.Integer> valuesRow() {
		return (org.jooq.Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return AsoCitaObservador.ASO_CITA_OBSERVADOR.CITA_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field2() {
		return AsoCitaObservador.ASO_CITA_OBSERVADOR.OBSERVADOR_SECUNDARIO_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getCitaId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value2() {
		return getObservadorSecundarioId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AsoCitaObservadorRecord value1(java.lang.Integer value) {
		setCitaId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AsoCitaObservadorRecord value2(java.lang.Integer value) {
		setObservadorSecundarioId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AsoCitaObservadorRecord values(java.lang.Integer value1, java.lang.Integer value2) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AsoCitaObservadorRecord
	 */
	public AsoCitaObservadorRecord() {
		super(AsoCitaObservador.ASO_CITA_OBSERVADOR);
	}

	/**
	 * Create a detached, initialised AsoCitaObservadorRecord
	 */
	public AsoCitaObservadorRecord(java.lang.Integer citaId, java.lang.Integer observadorSecundarioId) {
		super(AsoCitaObservador.ASO_CITA_OBSERVADOR);

		setValue(0, citaId);
		setValue(1, observadorSecundarioId);
	}
}
