/**
 * This class is generated by jOOQ
 */
package org.sao.aoa.migrator.model.tables;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.sao.aoa.migrator.model.AnuarioSchema;
import org.sao.aoa.migrator.model.tables.records.AsoCitaObservadorRecord;

/**
 * This class is generated by jOOQ.
 *
 * Asocia cita y observadores
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AsoCitaObservador extends TableImpl<AsoCitaObservadorRecord> {

	private static final long serialVersionUID = 698148047;

	/**
	 * The singleton instance of <code>aso_cita_observador</code>
	 */
	public static final AsoCitaObservador ASO_CITA_OBSERVADOR = new AsoCitaObservador();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AsoCitaObservadorRecord> getRecordType() {
		return AsoCitaObservadorRecord.class;
	}

	/**
	 * The column <code>aso_cita_observador.cita_id</code>. Identificador de la cita
	 */
	public final TableField<AsoCitaObservadorRecord, Integer> CITA_ID = createField("cita_id", SQLDataType.INTEGER.nullable(false), this, "Identificador de la cita");

	/**
	 * The column <code>aso_cita_observador.observador_secundario_id</code>. Identificador del observador
	 */
	public final TableField<AsoCitaObservadorRecord, Integer> OBSERVADOR_SECUNDARIO_ID = createField("observador_secundario_id", SQLDataType.INTEGER.nullable(false), this, "Identificador del observador");

	/**
	 * Create a <code>aso_cita_observador</code> table reference
	 */
	public AsoCitaObservador() {
		this(AnuarioSchema.getTablePrefix() + "aso_cita_observador", null);
	}

	/**
	 * Create an aliased <code>aso_cita_observador</code> table reference
	 */
	public AsoCitaObservador(String alias) {
		this(alias, AsoCitaObservador.ASO_CITA_OBSERVADOR);
	}

	private AsoCitaObservador(String alias, Table<AsoCitaObservadorRecord> aliased) {
		this(alias, aliased, null);
	}

	private AsoCitaObservador(String alias, Table<AsoCitaObservadorRecord> aliased, Field<?>[] parameters) {
		super(alias, AnuarioSchema.ANUARIO_SCHEMA, aliased, parameters, "Asocia cita y observadores");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AsoCitaObservador as(String alias) {
		return new AsoCitaObservador(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AsoCitaObservador rename(String name) {
		return new AsoCitaObservador(name, null);
	}
}
